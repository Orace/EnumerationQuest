<#

var docForElementAtOrDefaultWithIndex = new []
{
    @"<summary>",
    @"  <para>",
    @"    Requests the evaluation of the element at a specified index in a sequence.",
    @"  </para>",
    @"  <para>",
    @"    The result of this request is the element at the specified position in the sequence or",
    @"    <see langword=""default""/>(<typeparamref name=""TSource""/>) if the index is out of range.",
    @"  </para>",
    @"</summary>",
    @"<param name=""index"">The index of the element to retrieve, which is either from the beginning or the end of the sequence.</param>",
    @"<seealso cref=""Enumerable.ElementAtOrDefault{TSource}(IEnumerable{TSource}, Index)""/>",
};

var docForElementAtOrDefaultWithInt32 = new []
{
    @"<summary>",
    @"  <para>",
    @"    Requests the evaluation of the element at a specified index in a sequence.",
    @"  </para>",
    @"  <para>",
    @"    The result of this request is the element at the specified position in the sequence or",
    @"    <see langword=""default""/>(<typeparamref name=""TSource""/>) if the index is out of range.",
    @"  </para>",
    @"</summary>",
    @"<param name=""index"">The zero-based index of the element to retrieve.</param>",
    @"<seealso cref=""Enumerable.ElementAtOrDefault{TSource}(IEnumerable{TSource}, Int32)""/>",
};

#>