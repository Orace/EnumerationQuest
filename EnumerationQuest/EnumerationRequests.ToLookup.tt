<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>
<#@ include file="Overloads.t4" #>
<#

var methods = new[]
{
    new
    {
        Name = "ToLookup",
        Args = "keySelector",
        Doc = Array.Empty<string>(),
        Generics = ", TKey",
        Constraints = "where TKey : notnull",
        Params = ", Func<TSource, TKey> keySelector",
        TOut = "ILookup<TKey, TSource>",
    },
    new
    {
        Name = "ToLookup",
        Args = "keySelector, comparer",
        Doc = Array.Empty<string>(),
        Generics = ", TKey",
        Constraints = "where TKey : notnull",
        Params = ", Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer",
        TOut = "ILookup<TKey, TSource>",
    },
    new
    {
        Name = "ToLookup",
        Args = "keySelector, elementSelector",
        Doc = Array.Empty<string>(),
        Generics = ", TKey, TElement",
        Constraints = "where TKey : notnull",
        Params = ", Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector",
        TOut = "ILookup<TKey, TElement>",
    },
    new
    {
        Name = "ToLookup",
        Args = "keySelector, elementSelector, comparer",
        Doc = Array.Empty<string>(),
        Generics = ", TKey, TElement",
        Constraints = "where TKey : notnull",
        Params = ", Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer",
        TOut = "ILookup<TKey, TElement>",
    },
};

#>
<#@ include file="EnumerationRequests.t4" #>